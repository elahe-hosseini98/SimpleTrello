[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 11.0.14)
[debug]       Load.loadUnit: plugins took 40.269499ms
[debug]       Load.loadUnit: defsScala took 0.0097ms
[debug] [Loading] Scanning directory C:\Users\Elahe\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Elahe\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 5.1682 ms
[debug]           Load.resolveProject(global-plugins) took 3.5533ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Elahe\.sbt\1.0\plugins, plugins: List(<none>))) took 9.5546ms
[debug] [Loading] Done in C:\Users\Elahe\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 10.8109ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0172ms
[debug]     Load.loadUnit(file:/C:/Users/Elahe/.sbt/1.0/plugins/, ...) took 52.2373ms
[debug]   Load.apply: load took 54.078599ms
[debug]   Load.apply: resolveProjects took 0.198001ms
[debug]   Load.apply: finalTransforms took 10.940601ms
[debug]   Load.apply: config.delegates took 0.463801ms
[debug]   Load.apply: Def.make(settings)... took 49.5637ms
[debug]   Load.apply: structureIndex took 13.7859ms
[debug]   Load.apply: mkStreams took 0.0053ms
[info] loading global plugins from C:\Users\Elahe\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 458.7144ms
[debug]           Load.loadUnit: plugins took 45.9791ms
[debug]           Load.loadUnit: defsScala took 0.0068ms
[debug] [Loading] Scanning directory C:\Users\Elahe\Desktop\SimpleTrelloAPI\project
[debug]             Load.loadUnit: mkEval took 0.404299ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Elahe\Desktop\SimpleTrelloAPI\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.5524 ms
[info] loading settings for project simpletrelloapi-build from idea10.sbt ...
[debug]               Load.resolveProject(simpletrelloapi-build) took 7.6147ms
[debug]             Load.loadTransitive: finalizeProject(Project(id simpletrelloapi-build, base: C:\Users\Elahe\Desktop\SimpleTrelloAPI\project, plugins: List(<none>))) took 25.672401ms
[debug] [Loading] Done in C:\Users\Elahe\Desktop\SimpleTrelloAPI\project, returning: (simpletrelloapi-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 63.5252ms
[debug]           Load.loadUnit: cleanEvalClasses took 1.836ms
[debug]         Load.loadUnit(file:/C:/Users/Elahe/Desktop/SimpleTrelloAPI/project/, ...) took 112.5586ms
[debug]       Load.apply: load took 114.7306ms
[debug]       Load.apply: resolveProjects took 0.1265ms
[debug]       Load.apply: finalTransforms took 9.444899ms
[debug]       Load.apply: config.delegates took 0.291ms
[debug]       Load.apply: Def.make(settings)... took 79.9195ms
[debug]       Load.apply: structureIndex took 19.4857ms
[debug]       Load.apply: mkStreams took 0.0317ms
[info] loading project definition from C:\Users\Elahe\Desktop\SimpleTrelloAPI\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 439.748499ms
[debug]     Load.loadUnit: defsScala took 0.0058ms
[debug] [Loading] Scanning directory C:\Users\Elahe\Desktop\SimpleTrelloAPI
[debug]       Load.loadUnit: mkEval took 0.343699ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 19.6492 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 99.631399ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Elahe\Desktop\SimpleTrelloAPI, plugins: List(<none>))) took 120.4813ms
[debug] [Loading] Done in C:\Users\Elahe\Desktop\SimpleTrelloAPI, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 265.3027ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.7485ms
[debug]   Load.loadUnit(file:/C:/Users/Elahe/Desktop/SimpleTrelloAPI/, ...) took 714.3204ms
[debug] Load.apply: load took 716.936601ms
[debug] Load.apply: resolveProjects took 0.101899ms
[debug] Load.apply: finalTransforms took 23.0691ms
[debug] Load.apply: config.delegates took 0.9049ms
[debug] Load.apply: Def.make(settings)... took 148.074801ms
[debug] Load.apply: structureIndex took 31.9777ms
[debug] Load.apply: mkStreams took 0.0032ms
[info] set current project to SimpleTrelloAPI (in build file:/C:/Users/Elahe/Desktop/SimpleTrelloAPI/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
